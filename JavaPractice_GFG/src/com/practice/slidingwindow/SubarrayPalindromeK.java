package com.practice.slidingwindow;

/*
 * Given an array arr[], consisting of N integers in the range [0, 9], 
 * the task is to find a subarray of length K from which we can generate a 
 * number which is a Palindrome Number.If no such subarray exists, print -1.
 * Note: The elements in the array is in the range of 0 to 10.

Examples:

Input: arr[] = {1, 5, 3, 2, 3, 5, 4}, K = 5
Output: 5, 3, 2, 3, 5
Explanation:
Number generated by concatenating all elements of the subarray, i.e. 53235, is a palindrome.

Input: arr[] = {2, 3, 5, 1, 3}, K = 4
Output: -1


 */
public class SubarrayPalindromeK {
 public static void main(String a[])
 {
	 int[] arr= {1, 5, 3, 2, 3, 5, 4};
	 int k = 5 ;
	 int index = findPalindromeSubarray(arr,k);
	 
	 if(index!=-1)
	 {
		 for(int i=index;i<index+k;i++)
			 System.out.print(arr[i]);
	 }
	 else
	 {
		 System.out.print("-1");
	 }
 }
	
 public static boolean checkPalindrome(int num)
 {
	 boolean isPalin=false;
	 int orgnum=num,revnum=0;
	 
	 while(num>0)
	 {
		 revnum = revnum*10 + num%10;
		 num=num/10;
	 }
	 if(orgnum == revnum)
	 {
		 isPalin=true;
	 }
	 System.out.println("num:"+orgnum+"; revnum:"+revnum);
	 return isPalin;
 }
 public static int findPalindromeSubarray(int[] input,int k)
 {
	 int i,num=0;
	 
	 //Concatenate first k elements
	 for(i=0;i<k;i++)
	 {
		 num = num*10 + input[i];
	 }
	 
	 if(checkPalindrome(num))
	 {
		 return 0;
	 }
	 
	 for(int j=k;j<input.length;j++)
	 {
		 num = (num%(int)Math.pow(10,j-1))*10 + input[j];
		 
		 if(checkPalindrome(num))
			 return (j-i+1);
	 }
	 
	 return -1;
 }
}
